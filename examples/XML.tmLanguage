{	scopeName = 'text.xml';
	fileTypes = ( 'xml', 'tld', 'jsp', 'pt', 'cpt', 'dtml', 'rss', 'opml' );
	foldingStartMarker = '^\s*(<[^!?%/](?!.+?(/>|</.+?>))|<[!%]--(?!.+?--%?>)|<%[!]?(?!.+?%>))';
	foldingStopMarker = '^\s*(</[^>]+>|[/%]>|-->)\s*$';
	patterns = (
		{	name = 'meta.tag.preprocessor.xml';
			begin = '(<\?)\s*([-_a-zA-Z0-9]+)';
			end = '(\?>)';
			captures = {
				1 = { name = 'punctuation.definition.tag.xml'; };
				2 = { name = 'entity.name.tag.xml'; };
			};
			patterns = (
				{	name = 'entity.other.attribute-name.xml';
					match = ' ([a-zA-Z-]+)';
				},
				{	include = '#doublequotedString'; },
				{	include = '#singlequotedString'; },
			);
		},
		{	name = 'meta.tag.sgml.doctype.xml';
			begin = '(<!)(DOCTYPE)';
			end = '(>)';
			captures = {
				1 = { name = 'punctuation.definition.tag.xml'; };
				2 = { name = 'entity.name.tag.doctype.xml'; };
			};
			patterns = (
				{	begin = '(<!)(ENTITY)\s([-_a-zA-Z0-9]+)';
					end = '(>)';
					captures = {
						1 = { name = 'punctuation.definition.tag.xml'; };
						2 = { name = 'entity.name.tag.entity.xml'; };
						3 = { name = 'meta.entity.xml'; };
					};
					patterns = (
						{	include = '#doublequotedString'; },
						{	include = '#singlequotedString'; },
					);
				},
			);
		},
		{	name = 'comment.block.xml';
			begin = '<[!%]--';
			end = '--%?>';
			captures = { 0 = { name = 'punctuation.definition.comment.xml'; }; };
		},
		{	name = 'meta.tag.no-content.xml';
			begin = '(<)((?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+))(?=(\s[^>]*)?></\2>)';
			end = '(>(<))/(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)(>)';
			beginCaptures = {
				1 = { name = 'punctuation.definition.tag.xml'; };
				3 = { name = 'entity.name.tag.namespace.xml'; };
				4 = { name = 'entity.name.tag.xml'; };
				5 = { name = 'punctuation.separator.namespace.xml'; };
				6 = { name = 'entity.name.tag.localname.xml'; };
			};
			endCaptures = {
				1 = { name = 'punctuation.definition.tag.xml'; };
				2 = { name = 'meta.scope.between-tag-pair.xml'; };
				3 = { name = 'entity.name.tag.namespace.xml'; };
				4 = { name = 'entity.name.tag.xml'; };
				5 = { name = 'punctuation.separator.namespace.xml'; };
				6 = { name = 'entity.name.tag.localname.xml'; };
				7 = { name = 'punctuation.definition.tag.xml'; };
			};
			patterns = ( { include = '#tagStuff'; } );
		},
		{	name = 'meta.tag.xml';
			begin = '(</?)(?:([-_a-zA-Z0-9]+)((:)))?([-_a-zA-Z0-9:]+)';
			end = '(/?>)';
			captures = {
				1 = { name = 'punctuation.definition.tag.xml'; };
				2 = { name = 'entity.name.tag.namespace.xml'; };
				3 = { name = 'entity.name.tag.xml'; };
				4 = { name = 'punctuation.separator.namespace.xml'; };
				5 = { name = 'entity.name.tag.localname.xml'; };
			};
			patterns = ( { include = '#tagStuff'; } );
		},
		{	name = 'constant.character.entity.xml';
			match = '(&)([a-zA-Z0-9_-]+|#[0-9]+|#x[0-9a-fA-F]+)(;)';
			captures = {
				1 = { name = 'punctuation.definition.constant.xml'; };
				3 = { name = 'punctuation.definition.constant.xml'; };
			};
		},
		{	name = 'invalid.illegal.bad-ampersand.xml';
			match = '&';
		},
		{	name = 'source.java-props.embedded.xml';
			begin = '<%@';
			end = '%>';
			beginCaptures = { 0 = { name = 'punctuation.section.embedded.begin.xml'; }; };
			endCaptures = { 0 = { name = 'punctuation.section.embedded.end.xml'; }; };
			patterns = (
				{	name = 'keyword.other.page-props.xml';
					match = 'page|include|taglib';
				},
			);
		},
		{	name = 'source.java.embedded.xml';
			begin = '<%[!=]?(?!--)';
			end = '(?!--)%>';
			beginCaptures = { 0 = { name = 'punctuation.section.embedded.begin.xml'; }; };
			endCaptures = { 0 = { name = 'punctuation.section.embedded.end.xml'; }; };
			patterns = ( { include = 'source.java'; } );
		},
		{	name = 'string.unquoted.cdata.xml';
			begin = '<!\[CDATA\[';
			end = ']]>';
			beginCaptures = { 0 = { name = 'punctuation.definition.string.begin.xml'; }; };
			endCaptures = { 0 = { name = 'punctuation.definition.string.end.xml'; }; };
		},
	);
	repository = {
		doublequotedString = {
			name = 'string.quoted.double.xml';
			begin = '"';
			end = '"';
			beginCaptures = { 0 = { name = 'punctuation.definition.string.begin.xml'; }; };
			endCaptures = { 0 = { name = 'punctuation.definition.string.end.xml'; }; };
		};
		singlequotedString = {
			name = 'string.quoted.single.xml';
			begin = "'";
			end = "'";
			beginCaptures = { 0 = { name = 'punctuation.definition.string.begin.xml'; }; };
			endCaptures = { 0 = { name = 'punctuation.definition.string.end.xml'; }; };
		};
		tagStuff = {
			patterns = (
				{	match = ' (?:([-_a-zA-Z0-9]+)((:)))?([_a-zA-Z-]+)=';
					captures = {
						1 = { name = 'entity.other.attribute-name.namespace.xml'; };
						2 = { name = 'entity.other.attribute-name.xml'; };
						3 = { name = 'punctuation.separator.namespace.xml'; };
						4 = { name = 'entity.other.attribute-name.localname.xml'; };
					};
				},
				{	include = '#doublequotedString'; },
				{	include = '#singlequotedString'; },
			);
		};
	};
}